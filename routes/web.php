<?php

use App\Http\Controllers\ProfileController;
use Illuminate\Foundation\Application;
use Illuminate\Support\Facades\Route;
use Inertia\Inertia;

Route::get('/', function () {
    return Inertia::render('Welcome', [
        'canLogin' => Route::has('login'),
        'canRegister' => Route::has('register'),
        'laravelVersion' => Application::VERSION,
        'phpVersion' => PHP_VERSION,
    ]);
});

Route::get('/dashboard', function () {
    return Inertia::render('Dashboard');
})->middleware(['auth', 'verified'])->name('dashboard');

Route::get('/kiosk', function () {
    return Inertia::render('Kiosk/Index');
})->name('kiosk');

Route::get('/test-borders', function () {
    $borders = \App\Models\Border::with('category')->get();
    return response()->json($borders->map(function ($border) {
        return [
            'id' => $border->id,
            'name' => $border->name,
            'preview_path' => $border->preview_path,
            'preview_url' => asset('storage/' . $border->preview_path),
            'file_exists' => file_exists(storage_path('app/public/' . $border->preview_path)),
        ];
    }));
});

Route::get('/test-composition', function () {
    // Show the latest processed image for testing
    $processedFiles = glob(storage_path('app/public/photos/processed/*.jpg'));
    
    if (empty($processedFiles)) {
        return 'No processed images found. Run: php artisan test:image-composition';
    }
    
    $latestFile = end($processedFiles);
    $filename = basename($latestFile);
    $imageUrl = asset('storage/photos/processed/' . $filename);
    
    return '
    <html>
    <head><title>Image Composition Test</title></head>
    <body style="font-family: Arial; text-align: center; padding: 20px;">
        <h1>Latest Processed Image with Border</h1>
        <p>This shows the result of photo + border composition</p>
        <img src="' . $imageUrl . '" style="max-width: 800px; border: 1px solid #ccc; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" />
        <p><a href="' . $imageUrl . '" target="_blank">View full size</a></p>
        <p><em>Generated by: php artisan test:image-composition</em></p>
    </body>
    </html>';
});

Route::middleware('auth')->group(function () {
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
});

require __DIR__.'/auth.php';
